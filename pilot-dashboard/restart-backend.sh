#!/bin/bash

echo "üîÑ RED√âMARRAGE BACKEND AVEC EMERGENCY CONSULTING"
echo "==============================================="

# Kill backend process
echo "Arr√™t backend (port 5011)..."
lsof -ti:5011 | xargs kill -9 2>/dev/null || true

echo "Attente 2 secondes..."
sleep 2

# Start backend
echo "D√©marrage backend avec Emergency Consulting..."
cd backend
npm start &
BACKEND_PID=$!

echo ""
echo "‚úÖ BACKEND RED√âMARR√â"
echo "Backend PID: $BACKEND_PID"
echo "Port: 5011"
echo ""
echo "Test dans 5 secondes..."
sleep 5

# Test Emergency Consulting API
echo "üîç Test Emergency Consulting API:"
EC_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5011/api/emergency-consulting/status)
if [ "$EC_STATUS" = "200" ]; then
    echo "‚úÖ Emergency Consulting API: OP√âRATIONNELLE"
    echo ""
    echo "üìä Donn√©es de test:"
    curl -s http://localhost:5011/api/emergency-consulting/status | python3 -m json.tool 2>/dev/null || echo "JSON parsing failed"
else
    echo "‚ùå Emergency Consulting API: HTTP $EC_STATUS"
fi

echo ""
echo "üåê URLs accessibles:"
echo "‚Ä¢ Dashboard: http://localhost:5010"
echo "‚Ä¢ Emergency Consulting: http://localhost:5010/emergency-consulting"
echo "‚Ä¢ API Status: http://localhost:5011/api/emergency-consulting/status"
echo "‚Ä¢ API Leads: http://localhost:5011/api/emergency-consulting/leads"

echo ""
echo "‚úÖ BACKEND PR√äT AVEC EMERGENCY CONSULTING!"